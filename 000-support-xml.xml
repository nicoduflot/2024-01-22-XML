<!--
    Namespace 

    L'espace de nom donne un contexte à un terme, par exemple certains mots ont plusieurs définitions, 
    c'est le contexte dans lequel on utilise ce mot qui donne sa "fonction / définition" finale

    On peut par exemple associer le document à l’espace de nom XHTML et par soucis de praticité 
    on va utiliser le préfixe html (faciliter la lecture humaine du document) 
    car il faut savoir qu’à la base le choix du préfixe est totalement arbitraire.
-->
<!-- ici il y a un prologue -->
<!-- élément racine -->
<html:html xmlns:html="http://www.w3.org/1999/xhtml">
    <html:head>
        <html:title>
            Les espaces de noms
        </html:title>
    </html:head>
    <html:body>
        .....
    </html:body>
</html:html>

<!-- On peut décrire plusieurs espaces de nom dans un même document -->
<html:html
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:mml="http://www.w3.org/1998/Math/MathML"
>
    <html:head>
        <html:title>
            Les espaces de noms
        </html:title>
    </html:head>
    <html:body> ..... <mml:math>
            <mml:apply>
                <mml:eq>
                    <!-- (a + b)² -->
                    <mml:msup>
                        <mml:mfenced>
                            <mml:mrow>
                                <mml:mi>a</mml:mi>
                                <mml:mo>+</mml:mo>
                                <mml:mi>b</mml:mi>
                            </mrow>
                        </mfenced>
                        <mml:mn>2</mml:mn>
                    </msup>
                </mml:eq>
            </mml:apply>
        </mml:math>
    </html:body>
</html:html>

<!-- 
    on peut limiter la portée de la déclaration d'un espace de nom,
    pour la déclaration multiple, il est aussi possible de n'utiliser (d'appeler) une espace de nom 
    seulement quand il est requis
-->
<!-- ici on utilise le dialecte HTML -->
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>
            Les espaces de noms
        </title>
    </head>
    <body> 
        ..... 
        <!-- à partyir de cetyte balise et uniquement à l'intérieur de celle-ci on utlise le dialecte Math -->
        <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
                <eq>
                    <!-- (a + b)² -->
                    <msup>
                        <mfenced>
                            <mrow>
                                <mi>a</mi>
                                <mo>+</mo>
                                <mi>b</mi>
                            </mrow>
                        </mfenced>
                        <mn>2</mn>
                    </msup>
                </eq>
            </apply>
        </math>
        <!-- on revient surle dialecte HTML, car on sort de la portée du dialecte Math -->
    </body>
</html>

<!--
    Mais comment faisons nous s'il n'existe pas de contexte pour nos données, ou seulement une partie ?
    Il est possible "d'annuler" un espace de nom (de la même façon que l'on a appelé un espace de nom de manière ponctuelle)
-->

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>
            Les espaces de noms
        </title>
    </head>
    <body>
        .....
        <!-- 
            Pour inclure mon propre dialecte, je doit annuler la portée de HTML dans un espace du document 
            Pour ce faire, je vais déclarer un espace de nom nul
        -->
        <rolodex xmlns="">
            <nom>Lagaffe</nom>
            <prenom>Gaston</prenom>
        </rolodex>
        <!-- on sort de la portée de l'espace de nom nul, on revient en HTML -->
    </body>
</html>

<!-- 
XML
    http://www.w3.org/XML/1998/namespace 
XInclude
    http://www.w3.org/2001/XInclude 
XLink
    http://www.w3.org/1999/xlink 
MathML
    http://www.w3.org/1998/Math/MathML 
XHTML
    http://www.w3.org/1999/xhtml 
SVG
    http://www.w3.org/2000/svg 
Schémas
    http://www.w3.org/2001/XMLSchema 
Instances de schémas
    http://www.w3.org/2001/XMLSchema-instance 
Schematron
    http://purl.oclc.org/dsdl/schematron 
XSLT
    http://www.w3.org/1999/XSL/Transform 
XSL-FO
    http://www.w3.org/1999/XSL/Format 
DocBook
    https://tdg.docbook.org/tdg/5.1/ 
Dublin Core
    https://www.dublincore.org/specifications/dublin-core/dcmi-terms/ 

-->

<!-- 
    LES DTD 

    C'est un système de validation de format XML, en définissant une structure stricte aux documents XML.
    Les DTD permettent de définir l'arborescence des balises, leur ordre et leur cractère obligatoire ou non?

    Un XML possédant des DTD doit suivre le schéma imposé.

    Les DTD servent donc a imposer un format d'écriture, pour normaliser les documents quand ils sont produit par des personnes ou des systèmes différents.
-->

<!ELEMENT balise (contenu)>

<!-- balise contenant une autre balise -->
<contact>
    <nom>Durand</nom>
</contact>

<!-- balise contact -->
<!ELEMENT contact (nom)>
<!-- balise nom -->
<!ELEMENT nom (#PCDATA)>
<!-- si la balise doit être vide -->
<source src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
<!-- en DTD -->
<!ELEMENT source EMPTY>
    <!-- mais elle contient un attribut -->
    <!ATTLIST source src CDATA>

<!-- la balise prenom et la balise age peuvent être vides ou non -->
<rolodex>
    <contact>
        <nom>Duflot</nom>
        <prenom>Nicolas</prenom>
        <age>44</age>
    </contact>
    <contact>
        <nom>ACME Inc</nom>
        <prenom></prenom>
        <age></age>
    </contact>
</rolodex>

<!ELEMENT prenom ANY>

<!-- la balise contient de une à x autre balise du même nom -->
<!ELEMENT rolodex (contact+)>
<!-- + indique qu'il faut au moin une balise contact dans ROLODEX -->

<!-- en DTD le xml précédent -->
<!ELEMENT rolodex (contact+)>
    <!ELEMENT contact (nom, prenom, age)>
        <!ELEMENT nom (#PCDATA)>
        <!ELEMENT prenom (#PCDATA)>
        <!ELEMENT age (#PCDATA)>
<!-- si le xml ne fait pas apparaître les balises vide-->
<rolodex>
    <contact>
        <nom>Duflot</nom>
        <prenom>Nicolas</prenom>
        <age>44</age>
    </contact>
    <contact>
        <nom>ACME Inc</nom>
    </contact>
    <contact>
        <prenom>Tantine</prenom>
        <age>74</age>
    </contact>
</rolodex>
<!-- le DTD -->
<!ELEMENT rolodex (contact*)>
    <!-- ici, * indique qu'on pourrait avoir de 0 à X contact-->
    <!ELEMENT contact (nom | prenom, age?)>
    <!-- ici, ? indique que la balise peut être présente une seule fois ou pas du tout -->

<!-- les attributs -->
<!ELEMENT balise (contenu)>
    <!ATTLIST balise attr> 
    <!-- attr est la définition plus ou moins complexe de l'attribut -->

<!-- atribut type identifiant unique -->
<contact numero="n-1"></contact>
<!ELEMENT contact ANY>
    <!ATTLIST contact numero ID #REQUIRED>

<!-- 
    Propriété de présence des attributs
    forme               signification
    #IMPLIED            Attribut facultatif
    #REQUIRED           Attribut obligatoire
    #FIXED valeur       Attribut avec cette valeur, non modifiable
    "valeur"            Attribut avec cette valeur par défaut et modifiable
-->

<!-- Attribut utilisant le principe de référence (qui font référérence à) un attribut de valeur unique -->
<!ELEMENT contact ANY>
    <!ATTLIST contact personne (physique | morale) "physique">
    <!ATTLIST contact numero ID #REQUIRED>

<!ELEMENT adresse ANY>
    <!ATTLIST adresse type (facturation | livraison)>
    <!ATTLIST adresse useradresse IDREF #REQUIRED>

<rolodex>
    <contacts>
        <contact personne="physique" numero="n-01">
            ....
        </contact>
        <contact personne="physique" numero="n-02">
            ....
        </contact>
        <contact personne="morale" numero="n-03">
            ....
        </contact>
    </contacts>
    <adresses>
        <adresse type="facturation" useradresse="n-01">
            
        </adresse>
        <adresse type="livraison" useradresse="n-01">
            
        </adresse>
        <adresse type="facturation" useradresse="n-02">
            
        </adresse>
        <adresse type="livraison" useradresse="n-03">
            
        </adresse>
        <adresse type="facturation" useradresse="n-03">
            
        </adresse>
    </adresses>
</rolodex>

<!-- autre exemple ID IDREF -->
<artist name="Nick Cave" artistid="NC" />
<album name="Murder Ballads" albumartistid="NC" />
<album name="The boatman's call" albumartistid="NC" />

<!ELEMENT artist EMPTY>
    <!ATTLIST artist name CDATA #REQUIRED>
    <!ATTLIST artist artistid ID #REQUIRED>
<!ELEMENT album EMPTY>
    <!ATTLIST album name CDATA #REQUIRED>
    <!ATTLIST album albulartistid IDREF #IMPLIED>

<!-- 
    ID ET IDREFS 
    Plusieurs éléments référencent le même élément
-->

<!ELEMENT artist EMPTY>
    <!ATTLIST artist name CDATA #REQUIRED>
    <!ATTLIST artist artistid ID #REQUIRED>

<!ELEMENT album EMPTY>
    <!ATTLIST album name CDATA #REQUIRED>
    <!ATTLIST album albumartistid IDREFS #IMPLIED>

<artist name="Korn" artistid="K-0001" />
<artist name="Ice Cube" artistid="IC-0002" />
<artist name="Incubus" artistid="I-0003" />
<artist name="Limp Bizkit" artistid="LB-0004" />
<artist name="Orgy" artistid="O-0005" />
<album name="Follow the leader" albumartistids="K-0001" />
<album name="Family values tour '98" albumartistids="K-0001 IC-0002 I-0003 LB-0004 O-0005" />

<!-- attibuts avec des valeur par défaut -->
<!ATTLIST contact personne (physique | morale) "physique">
<!-- valide -->
<contact personne="physique"></contact>
<!-- valide -->
<contact personne="morale"></contact>
<!-- valide mais considéré par défaut comme physique -->
<contact personne=""></contact>
<!-- invalide -->
<contact personne="toto"></contact>

<!-- 
    Les constantes : si l'attribut est présent dans la balise, il doit avoir une valeur définie.
    S'il n'est pas présent dans la balise, il sera défini par défaut
-->

<!ATTLIST prix devise CDATA #FIXED "euro">
<!-- valide -->
<prix devise="euro">12</prix>
<!-- valide la devise sera euro-->
<prix>12</prix>
<!-- invalide : la devise DOIT être "euro" -->
<prix devise="USD">12</prix>

<!-- 
    Les entités :
    Se sont des alias qui permettent de réutiliser des informations dans le document xml OU dans les DTD
        - générales
        - paramètres
        - externes
-->

<!-- 
    entité générale
    Associe un alias à une information dans le document
-->

<!ENTITY dacia "DACIA">
<!ENTITY renault "RENAULT">
<!ENTITY citroen "CITROËN">

<voiture>
    <marque>&dacia;</marque>
</voiture>
<voiture>
    <marque>&renault;</marque>
</voiture>
<voiture>
    <marque>&citroen;</marque>
</voiture>

<!-- les xml est "interprété" comme suit -->
<voiture>
    <marque>DACIA</marque>
</voiture>
<voiture>
    <marque>RENAULT</marque>
</voiture>
<voiture>
    <marque>CITROËN</marque>
</voiture>

<!-- 
    entité paramètre
    Elle n'apparait que dans les DTD
    Elle associe un alias à une partie de la déclaration dans les DTD
    NE FONCTIONNE PAS AVEC LES ATTRIBUTS
-->
<parking>
    <voiture marque="Dacia" />
    <voiture marque="Renault" />
    <voiture marque="Citroën" />
    <camion marque="BMW" />
</parking>
<!-- DTD Classique pour l'élément parking -->
<!ELEMENT parking (voiture, camion)*>

<!-- avec l'entité paramètre -->
<!ENTITY % lot "(voiture, camion)*">
<!ELEMENT voiture %lot>

<!-- autre exemple -->
<!ENTITY % identite "nom?, prenom?">
<!ELEMENT contact (%identite, surnom)>
<!ELEMENT personnage (%identite, acteur)>

<!-- en DTD classique -->
<!ELEMENT contact (nom?, prenom?, surnom)>
<!ELEMENT personnage (nom?, prenom?, acteur)>

<!-- 
    entité externe 
    Permet de faire une référence, comme les entité générale, à des information a utiliser dans le document xml.
    Mais elles sont écrite dans un fichier externe
-->
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!ENTITY dacia SYSTEM "./parking/dacia.xml">
<!ENTITY renault SYSTEM "./parking/renault.xml">
<!ENTITY citroen SYSTEM "./parking/citroen.xml">

<!ELEMENT parking(voiture*)>

<parking>
    <voiture>
        %dacia;
    </voiture>
    <voiture>
        %renault;
    </voiture>
    <voiture>
        %citroen;
    </voiture>
</parking>

<!-- dacial.xml -->
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE description [
    <!ELEMENT description (marque, modele, portes)>
    <!ELEMENT marque (#PCDATA)>
    <!ELEMENT modele (#PCDATA)>
    <!ELEMENT portes (#PCDATA)>
] >
<description>
    <marque>
        Dacia
    </marque>
    <modele>
        Sandero
    </modele>
    <portes>
        5
    </portes>
</description>

<!-- renault.xml -->
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE description [
    <!ELEMENT description (marque, modele, portes)>
    <!ELEMENT marque (#PCDATA)>
    <!ELEMENT modele (#PCDATA)>
    <!ELEMENT portes (#PCDATA)>
] >
<description>
    <marque>
        Renault
    </marque>
    <modele>
        Clio
    </modele>
    <portes>
        3
    </portes>
</description>

<!-- XSD : Xml Schema Definition -->

<!-- prologue d'un fichier xsd -->
<?xml version="1.0" encoding="UTF-8"?>

<!-- l'élément racine d'un fichier xsd est imposé -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <!-- déclaration du schéma du fichier xml -->
</xsd:schema>
<!-- on déclare un espace de nom avec xmlns:xsd, de fait, tous les éléments du xsd seront préfixés par xsd: -->

<!--
    il faut ensuite rattacher ce fichier de schéma au xml concerné par le xsd
    il faut déclarer l'attachement du fichier dans la balise racine du xml
    mais pour appeler ce fichier il faut utiliser le vocabulaire schema-instance
-->

<!-- xml appelant un xsd en ne décrivant pas d'espace de nom -->
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<agenda xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="./definition/agenda.xsd">
    <contact>
        <nom clientid="CL-001">Durant</nom>
    </contact>
    <garage>
        <voiture client="CL-001">
            <marque>
                Opel
            </marque>
        </voiture>
    </garage>
</agenda>

<!-- si les parties du xml sont définies par différents xsd : on déclare des espace de nom pour chaque xsd -->
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<agenda xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemalocation="urn:Contact ./definition/contact.xsd"
    xsi:schemalocation="urn:Garage ./definition/garage.xsd"
    >
    <Contact:contact xmlns:Contact="urn:Contact">
        <Contact:nom>Durant</Contact:nom>
    </Contact:contact>
    <Garage:garage xmlns:Garage="urn:Garage">
        <Garage:voiture>
            <Garage:marque>
                Opel
            </Garage:marque>
        </Garage:voiture>
    </Garage:garage>
</agenda>

<!-- on peut aussi l'écrire comme ça -->
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<agenda xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemalocation="./definition/ agenda.xsd ./definition/ contact.xsd ./definition/ garage.xsd"
    xmlns:dc="https://www.dublincore.org/specifications/dublin-core/dcmi-terms/" 
    >
    <dc:creator>
        Nicolas Duflot
    </dc:creator>
    <contact>
        <nom>Durant</nom>
    </contact>
    <garage>
        <voiture>
            <marque>
                Opel
            </marque>
        </voiture>
    </garage>
</agenda>

<!-- 
    Déclaration des éléments
    Deux type d'éléments : simples et complexes

    Élément simple : 
    une balise, sans attribut, ne contenant pas d'autre balise, dont le type de donnée contenu est simple
    
    Élément comlexe : 
    une balise qui contient d'autre balise, ou que le type de donnée est complexe, ou qu'elle contient au moins un attribut.
-->

<!-- ni attribut, ni balise, ni type de donnée complexe : élément simple -->
<nom>Duflot</nom>

<!-- ou un attribut, ou une autre balise, ou un type de donnée complexe : élément complexe -->
<personne type="physique">Nicolas Duflot</personne>

<!-- élément complexe, contient d'autres balises -->
<personne>
    <!-- élément complexe, un attribut -->
    <nom type="usage">
        Duflot
    </nom>
    <!-- élément complexe, un attribut -->
    <nom type="jeune-fille">
        Decroix
    </nom>
    <!-- élément simple, pas d'attribut, pas de balise, donnée type simple -->
    <prenom>
        Tiphaine
    </prenom>
</personne>